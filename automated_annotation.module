<?php

require_once 'includes/Services/Dumper.php';
require_once 'includes/Services/FastaDumper.php';
require_once 'includes/Services/FeatureFinder.php';
require_once 'includes/api/automated_annotation.api.inc';


/**
 * Implements hook_menu().
 */
function automated_annotation_menu() {
  $items = [];

  $items['admin/config/automated-annotation'] = [
    'title' => 'Automated Annotation',
    'description' => 'Configure the email addresses that receive annotation notifications.',
    'page callback' => 'drupal_get_form',
    'page arguments' => ['automated_annotation_settings_form'],
    'access arguments' => ['administer tripal'],
    'file' => 'includes/automated_annotation_settings.form.inc',
  ];

  $items['admin/config/automated-annotation/settings'] = [
    'title' => 'Settings',
    'description' => 'Configure the email addresses that receive annotation notifications.',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  ];

  $items['admin/config/automated-annotation/report'] = [
    'title' => 'Annotations Report',
    'description' => 'Configure the email addresses that receive annotation notifications.',
    'page callback' => 'automated_annotation_report_page',
    'access arguments' => ['administer tripal'],
    'file' => 'includes/automated_annotation_report.page.inc',
    'type' => MENU_LOCAL_TASK,
  ];

  return $items;
}

/**
 * Find features that need annotation.
 *
 * @throws \MailCLIException
 */
function automated_annotation_find_features_with_no_annotations() {
  // We care about gene, mRNA and polypeptide
  $finder = new \AutomatedAnnotation\FeatureFinder();

  try {
    $genes = $finder->generateAnnotationsReport('gene');
    $mRNA = $finder->generateAnnotationsReport('mRNA');

    $message = "There are {$genes['blast']} genes missing blast BLAST results.\n";
    $message .= "There are {$genes['cvterm']} genes missing annotations.\n";
    $message .= "There are {$mRNA['blast']} mRNAs missing blast BLAST results.\n";
    $message .= "There are {$mRNA['cvterm']} mRNAs missing annotations.\n";
  } catch (Exception $exception) {
    $error = $exception->getMessage();
    $message = "Unable to generate report due to the following error: {$error}\n";
  }

  echo "$message\n";

  $settings = automated_annotation_get_settings();

  //  (new MailCLIMessage())
  //    ->to($settings['emails'])
  //    ->from(user_load(1)->mail)
  //    ->subject('Annotations Report')
  //    ->message($message)
  //    ->send();
}
